#
#  Copyright (c) Jeong Han Lee
#
#  This gconpi.proto is free software: you can redistribute
#  it and/or modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation, either version 2 of the
#  License, or any newer version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#  more details.
#
#  You should have received a copy of the GNU General Public License along with
#  this program. If not, see https://www.gnu.org/licenses/gpl-2.0.txt
#
#
#  author  : Jeong Han Lee
#  email   : jeonghan.lee@gmail.com
#  date    : Tuesday, July 28 18:42:43 KST 2015
#  version : 0.1
#
#  mightyohm.com Geiger Counter Stream protocol file
#
#  https://github.com/jeonghanlee/gconpi
#



# There is no information on Termintor of mightyohm Geiger counter.
# So, I test the following cases, and decide to use CR LF as the Terminator
# 
#
# - No terminator and Only LF
# RPI:RAD1:CPS                   2015-07-29 13:59:40.711762 0 CALC INVALID
# RPI:RAD1:CPM                   <undefined> 20 UDF INVALID
# RPI:RAD1:uSv                   <undefined> 0.11 UDF INVALID
# RPI:RAD1:CPS                   2015-07-29 13:59:43.698898 1 CALC INVALID
# RPI:RAD1:CPS                   2015-07-29 13:59:44.694614 0 CALC INVALID

# - Only CR
# From time to time, 
# RPI:RAD1:CPS                   2015-07-29 13:44:13.298529 2  
# RPI:RAD1:CPS                   2015-07-29 13:44:14.298365 2 CALC INVALID
# RPI:RAD1:CPM                   2015-07-29 13:44:36.621662 31  
# RPI:RAD1:CPS                   2015-07-29 13:44:36.621739 1  

# - CR LF
# 
# No issue I found during 3 hours
#

Terminator   = CR LF;
ReplyTimeout = 1000;
ReadTimeout  = 300;

## mightyohm.com Geiger Counter 1.00
## http://mightyohm.com/geiger
## CPS, 2, CPM, 2, uSv/hr, 0.01, SLOW
## CPS, 0, CPM, 2, uSv/hr, 0.01, SLOW
## CPS, 0, CPM, 2, uSv/hr, 0.01, SLOW
## CPS, 0, CPM, 2, uSv/hr, 0.01, SLOW
## CPS, 1, CPM, 3, uSv/hr, 0.01, SLOW


read_CPS
{
    in "CPS, %f, CPM, %*f, uSv/hr, %*f, %*s";
    @mismatch {
#	in "%s";
        in "%(\$1)s";
	
    }
 
}


read_CPM
{
    in "CPS, %*f, CPM, %f, uSv/hr, %*f, %*s";
}



read_uSv
{
    in "CPS, %*f, CPM, %*f, uSv/hr, %f, %*s";
}


read_avgmode
{
    in "CPS, %*f, CPM, %*f, uSv/hr, %*f, %s";
}
